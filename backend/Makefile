.PHONY: start tunnel dev stop install clean help

# Default target
help:
	@echo "üöÄ Big Apple Rec Sports Backend Commands"
	@echo "========================================="
	@echo "make start    - Start the backend server"
	@echo "make tunnel   - Start ngrok tunnel"
	@echo "make dev      - Start both server and tunnel (in background)"
	@echo "make stop     - Stop all running processes"
	@echo "make install  - Install Python dependencies"
	@echo "make clean    - Clean up processes and logs"
	@echo "make test         - Test the API endpoints"
	@echo "make test-services - Test service layer functionality"
	@echo "make test-api     - Test API integration endpoints"
	@echo ""
	@echo "Quick Start:"
	@echo "1. Run 'make start' in one terminal"
	@echo "2. Run 'make tunnel' in another terminal"
	@echo "3. Use the ngrok URL in your Google Apps Script"

# Start the backend server
start:
	@echo "üöÄ Starting backend server..."
	python3 -m uvicorn main:app --reload --host 127.0.0.1 --port 8000

# Start ngrok tunnel (kills existing first)
tunnel:
	@echo "üåê Starting ngrok tunnel..."
	@pkill -f ngrok || true
	@sleep 1
	ngrok http 8000

# Development mode - start both server and tunnel
dev:
	@echo "üîß Starting development environment..."
	@pkill -f ngrok || true
	@pkill -f uvicorn || true
	@sleep 1
	@python3 -m uvicorn main:app --reload --host 127.0.0.1 --port 8000 &
	@sleep 3
	@ngrok http 8000 &
	@echo "‚úÖ Server and tunnel starting in background..."
	@echo "üìù Check processes with: make status"

# Stop all processes
stop:
	@echo "üõë Stopping all processes..."
	@pkill -f ngrok || true
	@pkill -f uvicorn || true
	@echo "‚úÖ All processes stopped"

# Install dependencies
install:
	@echo "üì¶ Installing dependencies..."
	pip3 install -r requirements.txt

# Clean up
clean: stop
	@echo "üßπ Cleaning up..."
	@rm -f ngrok.log
	@rm -f *.pyc
	@rm -rf __pycache__
	@echo "‚úÖ Cleanup complete"

# Test API endpoints
test:
	@echo "üß™ Testing API endpoints..."
	@echo "Testing root endpoint:"
	@curl -s http://127.0.0.1:8000/ | python3 -c "import sys, json; print(json.dumps(json.load(sys.stdin), indent=2))" || echo "‚ùå Server not running"
	@echo ""
	@echo "Testing leadership health:"
	@curl -s http://127.0.0.1:8000/leadership/health | python3 -c "import sys, json; print(json.dumps(json.load(sys.stdin), indent=2))" || echo "‚ùå Server not running"

# Test services
test-services:
	@echo "üß™ Testing services..."
	@cd services && python3 test_csv_service.py
	@echo ""
	@cd services && python3 test_leadership_service.py

# Test API endpoints
test-api:
	@echo "üß™ Testing API endpoints..."
	@cd routers && python3 test_leadership_router.py

# Show running processes
status:
	@echo "üìä Process Status:"
	@echo "Backend Server:"
	@ps aux | grep uvicorn | grep -v grep || echo "‚ùå Backend server not running"
	@echo ""
	@echo "Ngrok Tunnel:"
	@ps aux | grep ngrok | grep -v grep || echo "‚ùå Ngrok tunnel not running"
	@echo ""
	@echo "Ngrok URL (if running):"
	@curl -s http://localhost:4040/api/tunnels | python3 -c "import sys, json; data=json.load(sys.stdin); print(data['tunnels'][0]['public_url'] if data.get('tunnels') else '‚ùå No tunnels')" 2>/dev/null || echo "‚ùå Ngrok not accessible"

# Get ngrok URL
url:
	@curl -s http://localhost:4040/api/tunnels | python3 -c "import sys, json; data=json.load(sys.stdin); print('üåê Ngrok URL:', data['tunnels'][0]['public_url']) if data.get('tunnels') else print('‚ùå No ngrok tunnel running')" 2>/dev/null || echo "‚ùå Ngrok not accessible" 