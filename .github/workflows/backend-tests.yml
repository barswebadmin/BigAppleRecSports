name: Backend Tests

# Prevent duplicate runs for the same branch/PR
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref_name }}
  cancel-in-progress: true

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-tests.yml'
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-tests.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    # Advisory only: do not fail the entire workflow/merge if tests fail here
    continue-on-error: true

    defaults:
      run:
        working-directory: ./backend

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up test environment variables
      run: |
        echo "SHOPIFY_STORE=test-store.myshopify.com" >> $GITHUB_ENV
        echo "SHOPIFY_TOKEN=test_token" >> $GITHUB_ENV
        echo "ENVIRONMENT=test" >> $GITHUB_ENV

    - name: Run all tests using pytest
      run: |
        # Set environment variables for testing
        export SHOPIFY_STORE="test-store.myshopify.com"
        export SHOPIFY_TOKEN="test_token"
        export ENVIRONMENT="test"
        export SLACK_REFUNDS_BOT_TOKEN="test_slack_token"

        echo "ðŸ§ª Environment setup:"
        echo "  ENVIRONMENT=$ENVIRONMENT"
        echo "  SHOPIFY_STORE=$SHOPIFY_STORE"
        echo "  SHOPIFY_TOKEN present: $([ -n "$SHOPIFY_TOKEN" ] && echo 'yes' || echo 'no')"

        # Run unit tests
        echo "ðŸ§ª Running unit tests with mocked services (no external API calls)..."
        python -m pytest tests/unit/ -v

        echo "ðŸ§ª Running service-specific unit tests..."
        python -m pytest services/*/tests/ -v || true

        echo "ðŸ§ª Running router unit tests..."
        python -m pytest routers/tests/ -v || true

        echo "ðŸ§ª Running Slack webhook tests..."
        python -m pytest routers/tests/test_slack_router.py -v || true

        echo "ðŸ§ª Running integration tests..."
        python -m pytest tests/integration/ -v

        echo "âœ… Backend test run completed (advisory)."
      env:
        SHOPIFY_STORE: test-store.myshopify.com
        SHOPIFY_TOKEN: test_token
        ENVIRONMENT: test
        SLACK_REFUNDS_BOT_TOKEN: test_slack_token
