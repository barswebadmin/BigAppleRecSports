name: Deploy Changed Lambda Functions

on:
    push:
        branches:
            - main
        paths:
            - "lambda-functions/**/*.py"
            - "lambda-functions/**/requirements.txt"
            - "lambda-layers/**/*"

jobs:
    deploy:
        runs-on: ubuntu-latest
        environment: prod
        env:
            AWS_REGION: us-east-1 # Change this to your AWS region if different
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 2

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.9" # Match your Lambda runtime version

            - name: Set up AWS CLI
              uses: aws-actions/configure-aws-credentials@v2
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ env.AWS_REGION }}

            - name: Deploy Lambda Layer
              run: |
                  echo "Deploying bars-common-utils layer..."
                  cd lambda-layers/bars-common-utils

                  # Install layer dependencies
                  if [ -f "requirements.txt" ]; then
                    pip install -r requirements.txt -t python/
                  fi

                  # Create layer package
                  zip -r bars-common-utils.zip python/

                  # Deploy layer
                  LAYER_VERSION=$(aws lambda publish-layer-version \
                    --layer-name bars-common-utils \
                    --description "Common utilities for BARS Lambda functions" \
                    --zip-file fileb://bars-common-utils.zip \
                    --compatible-runtimes python3.9 \
                    --query 'LayerVersionArn' \
                    --output text)

                  echo "LAYER_VERSION=${LAYER_VERSION}" >> $GITHUB_ENV
                  echo "✅ Deployed layer: ${LAYER_VERSION}"

            - name: Determine changed functions
              id: changes
              run: |
                  CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} -- lambda-functions/ | grep -E '^lambda-functions/[^/]+/' | cut -d/ -f2 | sort -u)
                  echo "All changed files:"
                  git diff --name-only ${{ github.event.before }} ${{ github.sha }} -- lambda-functions/
                  echo "Changed directories: $CHANGED"
                  echo "CHANGED_FUNCTIONS<<EOF" >> $GITHUB_ENV
                  echo "$CHANGED" >> $GITHUB_ENV
                  echo "EOF" >> $GITHUB_ENV

            - name: Deploy functions
              run: |
                  cd lambda-functions
                  echo "Functions to deploy: $CHANGED_FUNCTIONS"
                  for func_dir in $CHANGED_FUNCTIONS; do
                    echo "Checking function directory: $func_dir"
                    if [ -d "$func_dir" ] && [ -f "$func_dir/lambda_function.py" ]; then
                      echo "✅ Deploying function: $func_dir"
                      
                      # Create temporary directory for packaging
                      mkdir -p temp_$func_dir
                      
                      # Copy function code
                      cp $func_dir/lambda_function.py temp_$func_dir/
                      
                      # Install dependencies if requirements.txt exists
                      if [ -f "$func_dir/requirements.txt" ]; then
                        pip install -r $func_dir/requirements.txt -t temp_$func_dir/
                      fi
                      
                      # Create deployment package
                      cd temp_$func_dir
                      zip -r "../${func_dir}.zip" .
                      cd ..
                      
                      # Update function configuration with layer
                      echo "Updating function configuration for $func_dir..."
                      aws lambda update-function-configuration \
                        --function-name "$func_dir" \
                        --layers "$LAYER_VERSION"
                      
                      # Wait for update to complete
                      echo "Waiting for function configuration update to complete..."
                      aws lambda wait function-updated --function-name "$func_dir"
                      
                      # Deploy to AWS Lambda
                      echo "Updating function code for $func_dir..."
                      aws lambda update-function-code \
                        --function-name "$func_dir" \
                        --zip-file fileb://"${func_dir}.zip"
                      
                      # Wait for code update to complete
                      echo "Waiting for function code update to complete..."
                      aws lambda wait function-updated --function-name "$func_dir"
                      
                      # Clean up
                      rm -rf temp_$func_dir "${func_dir}.zip"
                      
                      echo "Successfully deployed $func_dir"
                    fi
                  done
