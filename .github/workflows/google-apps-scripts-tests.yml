name: Google Apps Scripts Tests

on:
  push:
    paths:
      - 'GoogleAppsScripts/**'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'GoogleAppsScripts/**'
  workflow_dispatch:

jobs:
  test-google-apps-scripts:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python (for JSON validation)
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: Set up Node.js (for GoogleAppsScript testing)
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Make test scripts executable
      run: |
        cd GoogleAppsScripts
        chmod +x tests/*.sh
        
    - name: Run Deploy Script Tests
      continue-on-error: true
      run: |
        cd GoogleAppsScripts
        ./tests/test_deploy.sh
        
    - name: Run Sync Utilities Tests
      continue-on-error: true
      run: |
        cd GoogleAppsScripts
        ./tests/test_sync_utilities.sh
        
    - name: Run Leadership Discount Codes Tests
      continue-on-error: true
      run: |
        cd GoogleAppsScripts
        ./tests/test_leadership_discount_codes.sh
        
    - name: Run Parse Registration Function Tests
      continue-on-error: true
      run: |
        cd GoogleAppsScripts
        ./tests/test_parse_registration_functions.sh
        
    - name: Run Parse Registration Comprehensive Tests
      run: |
        cd GoogleAppsScripts
        ./tests/test_parse_registration_comprehensive.sh
        
    - name: Run Instructions Tests
      continue-on-error: true
      run: |
        cd GoogleAppsScripts
        ./tests/test_instructions.sh
        
    - name: Run All Tests (Integration)
      run: |
        cd GoogleAppsScripts
        ./tests/run_all_tests.sh
        
    - name: Validate Google Apps Script manifests
      run: |
        cd GoogleAppsScripts
        echo "🔍 Validating appsscript.json files..."
        find . -name "appsscript.json" -exec python3 -m json.tool {} \; > /dev/null
        echo "✅ All appsscript.json files are valid JSON"
        
    - name: Check for hardcoded secrets
      run: |
        cd GoogleAppsScripts
        echo "🔍 Checking for hardcoded secrets..."
        if grep -r "shpat_\|xoxb-\|https://hooks.slack.com" --include="*.gs" . | grep -v "shared-utilities/secretsUtils.gs" | grep -v "instructions.gs"; then
          echo "❌ Found hardcoded secrets in scripts!"
          exit 1
        else
          echo "✅ No hardcoded secrets found"
        fi
        
    - name: Verify all projects have instructions
      run: |
        cd GoogleAppsScripts
        echo "🔍 Verifying all projects have showInstructions functions..."
        failed=0
        for dir in leadership-discount-codes product-variant-creation parse-registration-info process-refunds-exchanges payment-assistance-tags veteran-tags; do
          if [ -f "$dir/instructions.gs" ] && grep -q "function showInstructions" "$dir/instructions.gs"; then
            echo "✅ $dir has instructions"
          else
            echo "❌ $dir missing instructions"
            failed=1
          fi
        done
        if [ $failed -eq 1 ]; then
          exit 1
        fi
        echo "✅ All projects have instructions"
        
    - name: Test Summary
      if: always()
      run: |
        echo "📊 Google Apps Scripts Test Summary Complete"
        echo "🚀 All scripts are ready for deployment!"
